group_by(year, country_of_jury, whichContest) %>%
summarise(male_count = n()) %>%
mutate(female_count = 5 - male_count)
df %>% mutate(age = year - birthyear)
sex_count <- df %>%
filter(gender == "male") %>%
group_by(year, country_of_jury, whichContest) %>%
summarise(male_count = n()) %>%
mutate(female_count = 5 - male_count)
sex_count
df %>% mutate(age = year - birthyear)
df <- df %>% mutate(age = year - birthyear)
df %>% group_by(year, country_of_jury) %>% summarise(mean_age = mean(age))
df %>%
group_by(year, country_of_jury, whichContest) %>%
summarise(mean_age = mean(age))
res <- male_count
res$mean_age <- mean_age$mean_age
res
res <- sex_count
res$mean_age <- mean_age$mean_age
res
mean_age$mean_age
res$mean_age <- mean_age$mean_age
sex_count
mean_age
mean_age <- df %>%
group_by(year, country_of_jury, whichContest) %>%
summarise(mean_age = mean(age))
mean_age
res <- sex_count
res$mean_age <- mean_age$mean_age
res
res[100:200]
res[,100:200]
res[100:200]
res
tail(res)
tail(res, 100)
res
res[year == 2017]
res[res$year == 2017]
res[res$year == 2017]
res[,res$year == 2017]
res[res$year == 2017,]
# Eurovision Web Scraping
library(dplyr)
df <- read.csv("https://query.data.world/s/mokmfaxjasujynpim4kx3nv2jy7azo", header=TRUE, stringsAsFactors=FALSE, sep = ";")
# year, Country_of_jury, member_id, gender, a data_of_birth rozbijac na rok, miesiac, dzien i tworzyc kolumne (wiek) ?
df <- df %>% select(event.year, Country.of.jury, Member.id, Gender, Date.of.birth)
colnames(df) <- c("year", "country_of_jury", "member_id", "gender", "birthdate")
#unique(df$country_of_jury)
df$country_of_jury[df$country_of_jury == "Czech-Republic"] <- "Czech Republic"
df$country_of_jury[df$country_of_jury == "Fyr-macedonia"] <- "Macedonia"
df$country_of_jury[df$country_of_jury == "United-kingdom"] <- "United Kingdom"
df$country_of_jury[df$country_of_jury == "San-marino"] <- "San Marino"
df$country_of_jury[df$country_of_jury == "Bosnia-herzegovina"] <- "Bosnia and Herzegovina"
df$whichContest = 'tbc'
whichContestsModulo = 1
whichC = {}
whichC[1] = 'sf1'
whichC[2] = 'sf2'
whichC[3] = 'f'
for(i in 1:nrow(df)){
aux <- strsplit(df$birthdate[i], "-")[[1]]
df$birthyear[i] <- aux[1]
df$birthmonth[i] <- aux[2]
df$birthday[i] <- aux[3]
if(i == 1) df$whichContest[i] = 'f'
else if(substring(df$country_of_jury[i-1], 1, 1) > substring(df$country_of_jury[i], 1, 1)){
whichContestsModulo = whichContestsModulo + 1
if (whichContestsModulo == 4)
whichContestsModulo = whichContestsModulo - 3
}
df$whichContest[i] = whichC[whichContestsModulo]
}
df$birthday <- as.integer(df$birthday)
df$birthmonth <- as.integer(df$birthmonth)
df$birthyear <- as.integer(df$birthyear)
#df
sex_count <- df %>%
filter(gender == "male") %>%
group_by(year, country_of_jury, whichContest) %>%
summarise(male_count = n()) %>%
mutate(female_count = 5 - male_count)
df <- df %>% mutate(age = year - birthyear)
mean_age <- df %>%
group_by(year, country_of_jury, whichContest) %>%
summarise(mean_age = mean(age))
res <- sex_count
res$mean_age <- mean_age$mean_age
res[res$year == 2017,]
write.csv2(res, "jury.csv", row.names = F)
# Eurovision Web Scraping
library(dplyr)
df <- read.csv("https://query.data.world/s/mokmfaxjasujynpim4kx3nv2jy7azo", header=TRUE, stringsAsFactors=FALSE, sep = ";")
# year, Country_of_jury, member_id, gender, a data_of_birth rozbijac na rok, miesiac, dzien i tworzyc kolumne (wiek) ?
df <- df %>% select(event.year, Country.of.jury, Member.id, Gender, Date.of.birth)
colnames(df) <- c("year", "country_of_jury", "member_id", "gender", "birthdate")
#unique(df$country_of_jury)
df$country_of_jury[df$country_of_jury == "Czech-Republic"] <- "Czech Republic"
df$country_of_jury[df$country_of_jury == "Fyr-macedonia"] <- "Macedonia"
df$country_of_jury[df$country_of_jury == "United-kingdom"] <- "United Kingdom"
df$country_of_jury[df$country_of_jury == "San-marino"] <- "San Marino"
df$country_of_jury[df$country_of_jury == "Bosnia-herzegovina"] <- "Bosnia and Herzegovina"
df$whichContest = 'tbc'
whichContestsModulo = 1
whichC = {}
whichC[1] = 'sf1'
whichC[2] = 'sf2'
whichC[3] = 'f'
for(i in 1:nrow(df)){
aux <- strsplit(df$birthdate[i], "-")[[1]]
df$birthyear[i] <- aux[1]
df$birthmonth[i] <- aux[2]
df$birthday[i] <- aux[3]
if(i == 1) df$whichContest[i] = 'f'
else if(substring(df$country_of_jury[i-1], 1, 1) > substring(df$country_of_jury[i], 1, 1)){
whichContestsModulo = whichContestsModulo + 1
if (whichContestsModulo == 4)
whichContestsModulo = whichContestsModulo - 3
}
df$whichContest[i] = whichC[whichContestsModulo]
}
df$birthday <- as.integer(df$birthday)
df$birthmonth <- as.integer(df$birthmonth)
df$birthyear <- as.integer(df$birthyear)
#df
sex_count <- df %>%
filter(gender == "male") %>%
group_by(year, country_of_jury, whichContest) %>%
summarise(male_count = n()) %>%
mutate(female_count = 5 - male_count)
df <- df %>% mutate(age = year - birthyear)
mean_age <- df %>%
group_by(year, country_of_jury, whichContest) %>%
summarise(mean_age = mean(age))
res <- sex_count
res$mean_age <- mean_age$mean_age
res[res$year == 2017,]
write.csv2(res, "jury.csv", row.names = F)
# Eurovision Web Scraping
library(dplyr)
df <- read.csv("https://query.data.world/s/mokmfaxjasujynpim4kx3nv2jy7azo", header=TRUE, stringsAsFactors=FALSE, sep = ";")
# year, Country_of_jury, member_id, gender, a data_of_birth rozbijac na rok, miesiac, dzien i tworzyc kolumne (wiek) ?
df <- df %>% select(event.year, Country.of.jury, Member.id, Gender, Date.of.birth)
colnames(df) <- c("year", "country_of_jury", "member_id", "gender", "birthdate")
#unique(df$country_of_jury)
df$country_of_jury[df$country_of_jury == "Czech-Republic"] <- "Czech Republic"
df$country_of_jury[df$country_of_jury == "Fyr-macedonia"] <- "Macedonia"
df$country_of_jury[df$country_of_jury == "United-kingdom"] <- "United Kingdom"
df$country_of_jury[df$country_of_jury == "San-marino"] <- "San Marino"
df$country_of_jury[df$country_of_jury == "Bosnia-herzegovina"] <- "Bosnia and Herzegovina"
df$whichContest = 'tbc'
whichContestsModulo = 1
whichC = {}
whichC[1] = 'sf1'
whichC[2] = 'sf2'
whichC[3] = 'f'
for(i in 1:nrow(df)){
aux <- strsplit(df$birthdate[i], "-")[[1]]
df$birthyear[i] <- aux[1]
df$birthmonth[i] <- aux[2]
df$birthday[i] <- aux[3]
if(i == 1) df$whichContest[i] = 'f'
else if(substring(df$country_of_jury[i-1], 1, 1) > substring(df$country_of_jury[i], 1, 1)){
whichContestsModulo = whichContestsModulo + 1
if (whichContestsModulo == 4)
whichContestsModulo = whichContestsModulo - 3
}
df$whichContest[i] = whichC[whichContestsModulo]
}
df$birthday <- as.integer(df$birthday)
df$birthmonth <- as.integer(df$birthmonth)
df$birthyear <- as.integer(df$birthyear)
#df
sex_count <- df %>%
filter(gender == "male") %>%
group_by(year, country_of_jury, whichContest) %>%
summarise(male_count = n())
df <- df %>% mutate(age = year - birthyear)
mean_age <- df %>%
group_by(year, country_of_jury, whichContest) %>%
summarise(mean_age = mean(age))
res <- sex_count
res$mean_age <- mean_age$mean_age
res[res$year == 2017,]
write.csv2(res, "jury.csv", row.names = F)
res
## 1. Libraries & data load
library(dplyr)
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv")
df
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv")
df <- read.csv2("../data/original/GDP_and_GDP_GROWTH.csv")
df
read.csv("../data/original/GDP_and_GDP_GROWTH.csv")
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ",")
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ",")
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ",")
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ",")
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ",")
df
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ";")
df
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ";")
df
cut(df$GDP.growth.annual, c(-10, -5, -1, 1, 5, 10))
df[is.na(df)]
df[df == NA]
df[df == NA,]
df[is.na(df)]
df[is.na()]
df[is.na(df)]
df
df[is.na(df)] <- 0
df
cut(df$GDP.growth.annual, c(-10, -5, -0.0001, 0.0001, 5, 10))
types(df)
type(df)
summary(df)
as.numeric(df$GDP.growth.annual)
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ";", stringsAsFactors = FALSE)
## 1. Libraries & data load
library(dplyr)
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ";", stringsAsFactors = FALSE)
df[is.na(df)] <- 0
cut(df$GDP.growth.annual, c(-10, -5, -0.0001, 0.0001, 5, 10))
df
as.numeric(df$GDP.current.US)
df$GDP.current.US <- as.numeric(df$GDP.current.US)
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ";", stringsAsFactors = FALSE)
df[is.na(df)] <- 0
cut(df$GDP.growth.annual, c(-10, -5, -0.0001, 0.0001, 5, 10))
df$GDP.current.US <- as.numeric(df$GDP.current.US)
df[is.na(df)] <- 0
df$GDP.current.US <- as.numeric(df$GDP.current.US)
df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
df
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ";", stringsAsFactors = FALSE)
df
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ";", stringsAsFactors = FALSE)
df[is.na(df)] <- 0
df
df$GDP.current.US <- as.numeric(df$GDP.current.US)
df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
df
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ";", stringsAsFactors = FALSE)
df
df[is.na(df)] <- 0
df
as.numeric(df$GDP.current.US)
cut(df$GDP.growth.annual, c(-10, -5, -0.0001, 0.0001, 5, 10))
as.numeric(df$GDP.current.US)
df$GDP.current.US
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ";", stringsAsFactors = FALSE)
df[is.na(df)] <- 0
df$GDP.current.US
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ";", stringsAsFactors = FALSE)
df[is.na(df)] <- 0
df$GDP.current.US
df$GDP.current.US <- as.numeric(df$GDP.current.US)
df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
df
## 1. Libraries & data load
library(dplyr)
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ";", stringsAsFactors = FALSE)
df[is.na(df)] <- 0
df$GDP.current.US
as.numeric(df$GDP.current.US)
df$GDP.growth.annual
as.numeric(gsub(",", ".", gsub("\\.", "", df$GDP.growth.annual)))
## 1. Libraries & data load
library(dplyr)
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ";", stringsAsFactors = FALSE)
df[is.na(df)] <- 0
df$GDP.growth.annual <- as.numeric(gsub(",", ".", gsub("\\.", "", df$GDP.growth.annual)))
df$GDP.current.US <- as.numeric(gsub(",", ".", gsub("\\.", "", df$GDP.current.US)))
df
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
cut(df$GDP.growth.annual, c(-10, -5, -0.0001, 0.0001, 5, 10))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-10, -5, -0.0001, 0.0001, 5, 10)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-100000, -5, -0.0001, 0.0001, 5, 10)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-100000000, -5, -0.0001, 0.0001, 5, 10)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-100000, -5, -0.0001, 0.0001, 5, 10)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-100, -5, -0.0001, 0.0001, 5, 10)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-150, -5, -0.0001, 0.0001, 5, 10)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-10, -5, -0.0001, 0.0001, 5, 10)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-50, -5, -0.0001, 0.0001, 5, 10)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-100, -5, -0.0001, 0.0001, 5, 10)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-100, -5, -0.0001, 0.0001, 5, 100)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-100, -10, -5, -0.0001, 0.0001, 5, 10, 100)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-100, -10, -5, -0.000001, 0.000001, 5, 10, 100)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-100, -10, -5, -0.001, 0.001, 5, 10, 100)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-100, -10, -5, -0.01, 0.01, 5, 10, 100)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-100, -10, -5, -0.001, 0.001, 5, 10, 100)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-100, -10, -5, -1, -0.001, 0.001, 1, 5, 10, 100)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-100, -10, -5, -1, -0.001, 0.001, 1, 5, 10, 100)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-100, -10, -5, -1, -0.001, 0.001, 1, 5, 10, 1000)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-100, -10, -5, -1, -0.001, 0.001, 1, 5, 10, 50)))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
table(cut(df$GDP.growth.annual, c(-100, -10, -5, -1, -0.001, 0.001, 1, 5, 10, 100)))
df %>%
mutate(GDP.growth.annual.cat = case_when(
GDP.growth.annual == "(-100,-10]" ~ "Huge decrease",
GDP.growth.annual == "(-10,-5]" ~ "Big decrease",
GDP.growth.annual == "(-5,-1]" ~ "Slight decrease",
GDP.growth.annual == "(-1,-0.001]" ~ "Stagnation",
GDP.growth.annual == "(-0.001,0.001]" ~ "Unknown",
GDP.growth.annual == "(-0.001,1]" ~ "Stagnation",
GDP.growth.annual == "(1,5]" ~ "Slight increase",
GDP.growth.annual == "(5,10]" ~ "Big increase",
GDP.growth.annual == "(10,100]" ~ "Huge increase",
)) %>%
select(-GDP.growth.annual)
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
df$GDP.growth.annual <- cut(df$GDP.growth.annual, c(-100, -10, -5, -1, -0.001, 0.001, 1, 5, 10, 100))
df <- df %>%
mutate(GDP.growth.annual.cat = case_when(
GDP.growth.annual == "(-100,-10]" ~ "Huge decrease",
GDP.growth.annual == "(-10,-5]" ~ "Big decrease",
GDP.growth.annual == "(-5,-1]" ~ "Slight decrease",
GDP.growth.annual == "(-1,-0.001]" ~ "Stagnation",
GDP.growth.annual == "(-0.001,0.001]" ~ "Unknown",
GDP.growth.annual == "(-0.001,1]" ~ "Stagnation",
GDP.growth.annual == "(1,5]" ~ "Slight increase",
GDP.growth.annual == "(5,10]" ~ "Big increase",
GDP.growth.annual == "(10,100]" ~ "Huge increase",
)) %>%
select(-GDP.growth.annual)
df
## 1. Libraries & data load
library(dplyr)
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ";", stringsAsFactors = FALSE)
df[is.na(df)] <- 0
df$GDP.growth.annual <- as.numeric(gsub(",", ".", gsub("\\.", "", df$GDP.growth.annual)))
df$GDP.current.US <- as.numeric(gsub(",", ".", gsub("\\.", "", df$GDP.current.US)))
df
cut(df$GDP.growth.annual, c(-100, -10, -5, -1, -0.001, 0.001, 1, 5, 10, 100))
#df$GDP.current.US <- as.numeric(df$GDP.current.US)
#df$GDP.growth.annual <- as.numeric(df$GDP.growth.annual)
#df
df$GDP.growth.annual <- cut(df$GDP.growth.annual, c(-100, -10, -5, -1, -0.001, 0.001, 1, 5, 10, 100))
df <- df %>%
mutate(GDP.growth.annual.cat = case_when(
GDP.growth.annual == "(-100,-10]" ~ "Huge decrease",
GDP.growth.annual == "(-10,-5]" ~ "Big decrease",
GDP.growth.annual == "(-5,-1]" ~ "Slight decrease",
GDP.growth.annual == "(-1,-0.001]" ~ "Stagnation",
GDP.growth.annual == "(-0.001,0.001]" ~ "Unknown",
GDP.growth.annual == "(0.001,1]" ~ "Stagnation",
GDP.growth.annual == "(1,5]" ~ "Slight increase",
GDP.growth.annual == "(5,10]" ~ "Big increase",
GDP.growth.annual == "(10,100]" ~ "Huge increase",
)) %>%
select(-GDP.growth.annual)
df
df$GDP.current.US[1,]
df$GDP.current.US[1]
df$GDP.current.US[2]
for (i in 1:nrow(df)){
df$GDP.current.US[i] <- length(df$GDP.current.US[i])
}
df
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ";", stringsAsFactors = FALSE)
df[is.na(df)] <- 0
df$GDP.growth.annual <- as.numeric(gsub(",", ".", gsub("\\.", "", df$GDP.growth.annual)))
df$GDP.current.US <- as.numeric(gsub(",", ".", gsub("\\.", "", df$GDP.current.US)))
df$GDP.growth.annual <- cut(df$GDP.growth.annual, c(-100, -10, -5, -1, -0.001, 0.001, 1, 5, 10, 100))
df <- df %>%
mutate(GDP.growth.annual.cat = case_when(
GDP.growth.annual == "(-100,-10]" ~ "Huge decrease",
GDP.growth.annual == "(-10,-5]" ~ "Big decrease",
GDP.growth.annual == "(-5,-1]" ~ "Slight decrease",
GDP.growth.annual == "(-1,-0.001]" ~ "Stagnation",
GDP.growth.annual == "(-0.001,0.001]" ~ "Unknown",
GDP.growth.annual == "(0.001,1]" ~ "Stagnation",
GDP.growth.annual == "(1,5]" ~ "Slight increase",
GDP.growth.annual == "(5,10]" ~ "Big increase",
GDP.growth.annual == "(10,100]" ~ "Huge increase",
)) %>%
select(-GDP.growth.annual)
for (i in 1:nrow(df)){
df$GDP.current.US[i] <- floor(log10(df$GDP.current.US[i])) + 1
}
df
df[df == -Inf] <- NA
df
library(dplyr)
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ";", stringsAsFactors = FALSE)
df[is.na(df)] <- 0
df$GDP.growth.annual <- as.numeric(gsub(",", ".", gsub("\\.", "", df$GDP.growth.annual)))
df$GDP.current.US <- as.numeric(gsub(",", ".", gsub("\\.", "", df$GDP.current.US)))
df$GDP.growth.annual <- cut(df$GDP.growth.annual, c(-100, -10, -5, -1, -0.001, 0.001, 1, 5, 10, 100))
df <- df %>%
mutate(GDP.growth.annual.cat = case_when(
GDP.growth.annual == "(-100,-10]" ~ "Huge decrease",
GDP.growth.annual == "(-10,-5]" ~ "Big decrease",
GDP.growth.annual == "(-5,-1]" ~ "Slight decrease",
GDP.growth.annual == "(-1,-0.001]" ~ "Stagnation",
GDP.growth.annual == "(-0.001,0.001]" ~ "Unknown",
GDP.growth.annual == "(0.001,1]" ~ "Stagnation",
GDP.growth.annual == "(1,5]" ~ "Slight increase",
GDP.growth.annual == "(5,10]" ~ "Big increase",
GDP.growth.annual == "(10,100]" ~ "Huge increase",
)) %>%
select(-GDP.growth.annual)
for (i in 1:nrow(df)){
df$GDP.current.US[i] <- floor(log10(df$GDP.current.US[i])) + 1
}
df[df == -Inf] <- "Unknown"
df
table(df$GDP.current.US)
colnames(df) <- c("Country", "Year", "Current.US.digits", "Growth.annual")
## 1. Libraries & data load
library(dplyr)
df <- read.csv("../data/original/GDP_and_GDP_GROWTH.csv", sep = ";", stringsAsFactors = FALSE)
## 2. Numeric types
df[is.na(df)] <- 0
df$GDP.growth.annual <- as.numeric(gsub(",", ".", gsub("\\.", "", df$GDP.growth.annual)))
df$GDP.current.US <- as.numeric(gsub(",", ".", gsub("\\.", "", df$GDP.current.US)))
## 3. Growth annual column to categories
df$GDP.growth.annual <- cut(df$GDP.growth.annual, c(-100, -10, -5, -1, -0.001, 0.001, 1, 5, 10, 100))
df <- df %>%
mutate(GDP.growth.annual.cat = case_when(
GDP.growth.annual == "(-100,-10]" ~ "Huge decrease",
GDP.growth.annual == "(-10,-5]" ~ "Big decrease",
GDP.growth.annual == "(-5,-1]" ~ "Slight decrease",
GDP.growth.annual == "(-1,-0.001]" ~ "Stagnation",
GDP.growth.annual == "(-0.001,0.001]" ~ "Unknown",
GDP.growth.annual == "(0.001,1]" ~ "Stagnation",
GDP.growth.annual == "(1,5]" ~ "Slight increase",
GDP.growth.annual == "(5,10]" ~ "Big increase",
GDP.growth.annual == "(10,100]" ~ "Huge increase",
)) %>%
select(-GDP.growth.annual)
## 4. Current US column to categories
for (i in 1:nrow(df)){
df$GDP.current.US[i] <- floor(log10(df$GDP.current.US[i])) + 1
}
df[df == -Inf] <- "Unknown"
#table(df$GDP.current.US)
## 5. Repair column names
colnames(df) <- c("Country", "Year", "Current.US.digits", "Growth.annual")
## 6. Save
write.csv2(df, "../data/new/gdp.csv", row.names = F)
df
cbind(1:nrow(df), df)
cbind(ID = 1:nrow(df), df)
